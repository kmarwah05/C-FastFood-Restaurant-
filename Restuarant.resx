<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="homeCloseImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAE
        ZQAABGUBWZCbYAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQGSURBVHhe7ZzL
        bhNBFESzTCKS78mLFQks+FQ2LAgSjx2Q/+HNLlRZdSXHmpiZnuqe7qGPdKXInq5bt9QhtqfxQafT6XQ6
        nVa5v78/RL1CXeqh5oD3K81wqIfKgIYnqE8o8hP1TE81Az3LO+EsT/RUXtDoCPWeXbf4jmpmJ8Irdx49
        b/MOdaRL8oAG3Hmf2W2AX6jqdyI9yusQ3IknutQLhVGPhRdUHSK9yeM+OKM3RAqivlB9BFWGCE/X8jYG
        X4gQOkWNDS+oKkR4mRJewJnnhQiBlPCCKkKEh5TwAs5+KqlpcCHqjiozWDRE9J4TXsAMpoeIRbeb5fPh
        y4UryRYDPZ+iftCAgTeSHQ8WnaO+bpbPh7vgWtLZYS/1dMAMziQ9DSxsLkT2UC8HnP1c0mlQQEIOsoZI
        bfVwMD+8gEISdJAlRGpK24EvvICCEnZgDZFa0nTgDy+A8IUaOLCESA1pOcgXXoAGDPEbuxmYFSLXSsNB
        /vACNFo8RK7RWgcM70LSZWBD1CIh8lqtccAZyoYXsLEMOBgVIq/RtQ6WCy+gARlxsDdEPHejaxwsH14A
        I5cy5GAwRDz2EvWHFxioJ7wAhrKFiJ/XHV4AYwxx92ZNKpsQUe7w6r75BYPOf+T5cVTcepwLPVV7v+YB
        MOrciQ6auu26gYZlfGnaCy+AcefLjhTY+0Z22gQDDJ0CKEG7O28XDFI6RPYqfh8mKxxIg+VmfeEFHEwD
        5mK94QUcUIO6WX94AQblPVtniP9PeITDolzvm0n9b9FcYNAxR8xSaOetWiocUIPmYr0hcjANmJv1hciB
        NFgp1hMiBnF+vDWF9kPEAPxr6zpilkK7L29gfKmdt0t7OxGGawkvaOc/A8Go82QofwWdWnX/OsOgc+fx
        uMUZqtmTspOgMRl08OCgD3/WYw7qC5GGZMzBg/ACPqbnHNQTIo3IkIPB8AI+p2scLB8iDciIg73hBbxG
        1zpYLkQ2lgEHo8ILcC0PNLUbIhuqsYNJ4QVYs/ghzyTYSA0dMLzkgz5ci2onRDZQIwccfPYpKWpIy0G+
        ECmsBg4s4QXUkqYDf4gQrP5kKDWl7cAXIoSaOdwI7ewnZScBgeZOhqJHHSFiYbMnQ9lLPR2khYhFbzfL
        50MDxT+LQ0/nH71byY4Hi/gFOx82y9MpuvN2YW95mAMzSPtCHi6UQAqLhhfQg7ykkB5eQAEJTaGK8AJ4
        STlKMj+8gEISHENV4QXwNOVUmC+8gIKoj1TfA8Or9r4DvaH+FaI/vADCx6jHQmziHiw9yusQ+cIL0GDo
        S8h+o57rkuqB1xfyvE3R7xDc3olN7Lxd6FneCWc51lNlYEPUa1SbRycAvPMeNmcoG16n0+l0Op1kDg7+
        ApZJmc5JYWziAAAAAElFTkSuQmCC
</value>
  </data>
</root>